(define fib
 (lambda [n]
  (if (<= n 2)
   1
   (+ (fib (- n 1)) (fib (- n 2)))))
 )


(define
 dump (lambda [m]
     (let [f (first m)]
      (if f
       (do 
        (println f)
        (dump (rest m)))
       (println "done")))))

(println "loaded")



